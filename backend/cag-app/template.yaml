AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  cag-app

  Sample SAM Template for cag-app

Parameters:
  EndpointOverride:
    Type: String
    Description: Endpoint Override for Lambda functions to test locally
    Default: ""
  Region:
    Type: String
    Description: AWS Region for deployment
    Default: "us-east-1"
  AWSEnv:
    Type: String
    Description: AWS Environment for deployment
    Default: "AWS"
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Api:
    Cors:
      AllowMethods: "'GET,POST,OPTIONS'"
      AllowHeaders: "'content-type'"
      # This shouldn't allow all, but there's no time!
      AllowOrigin: "'*'"
      # AllowCredentials: true
  Function:
    Timeout: 300
    MemorySize: 128
    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON
Resources:
  InventoryTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: inventory_table
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: category_id # used for your Global Secondary Index
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: category_id
          KeySchema:
            - AttributeName: category_id
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      BillingMode: PAY_PER_REQUEST

  GetInventoryFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: handlers/get_inventory_handler/
      Handler: app.lambda_handler
      Runtime: python3.10
      Architectures:
        - x86_64
      Environment:
        Variables:
          TABLE_NAME: !Ref InventoryTable
          ENDPOINT_OVERRIDE: !Ref EndpointOverride
          AWS_ENVIRON: !Ref AWSEnv
          REGION: !Ref Region
      Policies:
        # Read more about SAM policy templates here
        # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - DynamoDBCrudPolicy:
            TableName: !Ref InventoryTable
      Events:
        GetInventories:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /inventories
            Method: get
        FilterInventories:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /inventories/search
            Method: post

  DeleteInventoryFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: handlers/delete_inventory_handler/
      Handler: app.lambda_handler
      Runtime: python3.10
      Architectures:
        - x86_64
      Environment:
        Variables:
          TABLE_NAME: !Ref InventoryTable
          ENDPOINT_OVERRIDE: !Ref EndpointOverride
          AWS_ENVIRON: !Ref AWSEnv
          REGION: !Ref Region
      Policies:
        # Read more about SAM policy templates here
        # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - DynamoDBCrudPolicy:
            TableName: !Ref InventoryTable
      Events:
        DeleteInventories:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /inventories/delete
            Method: post

  StatsInventoryFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: handlers/stats_inventory_handler/
      Handler: app.lambda_handler
      Runtime: python3.10
      Architectures:
        - x86_64
      Environment:
        Variables:
          TABLE_NAME: !Ref InventoryTable
          ENDPOINT_OVERRIDE: !Ref EndpointOverride
          AWS_ENVIRON: !Ref AWSEnv
          REGION: !Ref Region
      Policies:
        # Read more about SAM policy templates here
        # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - DynamoDBCrudPolicy:
            TableName: !Ref InventoryTable
      Events:
        CreateStatsInventories:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /inventories/stats
            Method: post

  CreateInventoryFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: handlers/create_inventory_handler/
      Handler: app.lambda_handler
      Runtime: python3.10
      Architectures:
        - x86_64
      Environment:
        Variables:
          TABLE_NAME: !Ref InventoryTable
          ENDPOINT_OVERRIDE: !Ref EndpointOverride
          AWS_ENVIRON: !Ref AWSEnv
          REGION: !Ref Region
      Policies:
        # Read more about SAM policy templates here
        # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - DynamoDBCrudPolicy:
            TableName: !Ref InventoryTable
      Events:
        CreateInventories:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /inventories
            Method: post

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  InventoriesApi:
    Description: API Gateway endpoint URL for Prod stage for Inventories
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"

  GetInventoryFunction:
    Description: Hello World Lambda Function ARN
    Value: !GetAtt GetInventoryFunction.Arn
  GetInventoryFunctionIamRole:
    Description: Implicit IAM Role created for Get Inventory function
    Value: !GetAtt GetInventoryFunctionRole.Arn

  DeleteInventoryFunction:
    Description: Hello World Lambda Function ARN
    Value: !GetAtt DeleteInventoryFunction.Arn
  DeleteInventoryFunctionIamRole:
    Description: Implicit IAM Role created for Get Inventory function
    Value: !GetAtt DeleteInventoryFunctionRole.Arn

  CreateInventoryFunction:
    Description: Hello World Lambda Function ARN
    Value: !GetAtt CreateInventoryFunction.Arn
  CreateInventoryFunctionIamRole:
    Description: Implicit IAM Role created for Create Inventory function
    Value: !GetAtt CreateInventoryFunctionRole.Arn

  StatsInventoryFunction:
    Description: Hello World Lambda Function ARN
    Value: !GetAtt StatsInventoryFunction.Arn
  StatsInventoryFunctionIamRole:
    Description: Implicit IAM Role created for Stats Inventory function
    Value: !GetAtt StatsInventoryFunctionRole.Arn

  InventoryTable:
    Description: "Inventory DynamoDB Table"
    Value: !Ref InventoryTable
  InventoryTableArn:
    Description: "Inventory DynamoDB Table ARN"
    Value: !GetAtt InventoryTable.Arn
